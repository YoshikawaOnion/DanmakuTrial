@startuml
state Game{
    [*] --> GameInit
    GameInit --> GameOpening : ε/GameManager初期化
    GamePlay --> GameOpening : EnemyNextRound;RaiseNextRound()/-
    GameOpening --> GamePlay : ε/敵とプレイヤーを移動。\n弾幕開始演出
    GamePlay --> GameWin : EnemyWin;RaiseWin()/-
    GamePlay --> GameLose : EnemyDefeated;RaiseLose()/-
    GameWin --> [*] : ε/勝利演出、\nオブジェクト削除
    GameLose --> [*] : ε/敗北演出、\nオブジェクト削除
}

state Enemy{
    state Fight{
        Neutral --> Guts : SafeAreaを出たとき/-
        Guts --> Neutral : SafeAreaに入ったとき/-
        Neutral : 弾が当たったら消す\n弾に押される
        Guts : 弾が当たったら消す\n弾に押される
    }
    [*] --> NextRound
    Fight --> NextRound : FightAreaを出たとき/\n弾消し、行動ストップ
    NextRound --> Opening : ε(NextRound)/\nDamageSound
    Opening --> Neutral : GamePlay;RaiseRoundStart()/\n行動開始
    NextRound --> Defeated : ε(Defeated)/\nDefeatedSound
    Fight --> Win : PlayerがFightAreaを出たとき/\n行動ストップ
    Defeated --> [*]
    Win --> [*]
    Guts : 前方へ進む
    NextRound : パターンを進める
}

state Player{
    [*] --> PlayerOpening
    PlayerOpening --> PlayerFight : GamePlay/-
    PlayerFight --> PlayerWin : EnemyDefeated/-
    PlayerFight --> PlayerLose : PlayerDefeated/-
    PlayerFight --> PlayerOpening : EnemyNextRound/-
    PlayerFight --> PlayerDamaged : PlayerHitEnemyShot/\nアニメーションをDamageに
    PlayerDamaged --> PlayerFight : 一定時間被弾しない/\nアニメーションをPlayerに
    PlayerWin --> [*]
    PlayerLose --> [*]
    PlayerFight : ショットを撃つ\n移動可能\n敵弾に押される
}

note "本当に音をStateから鳴らす？" as N1
note "Game -> Enemyへの通知をどうするか" as N2
note "Enemy -> Gameへの通知をどうするか" as N3

@enduml